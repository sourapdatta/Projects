library(tidyverse)
library(dplyr)
library(stringr)
library(knitr)
library(ggmap)
library(DT)
library(plotly)
library(gridExtra)
listings <- read.csv("data/AirBnb_listings.csv", na.strings=c(""," ","NA"))
library(tidyverse)
library(dplyr)
library(stringr)
library(knitr)
library(ggmap)
library(DT)
library(plotly)
library(gridExtra)
listings <- read.csv("data/AirBnb_listings.csv", na.strings=c(""," ","NA"))
listings_dim <- dim(listings)
names(listings)
listings_sub <- listings %>%
select(latitude, longitude,neighbourhood_cleansed, price,accommodates,room_type, property_type, bed_type)
datatable(head(listings_sub, n=10))
sum(is.na(listings_sub))
listings_sub$price[1:5]
listings_sub$price <- as.numeric(listings_sub$price)
summary(listings_sub$price)
listings_sub %>%
group_by(neighbourhood_cleansed) %>%
select(neighbourhood_cleansed) %>%
summarise(count = n())%>%
arrange(desc(count)) %>%
top_n(10)%>%
ggplot()+
geom_bar(mapping = aes(x=reorder(neighbourhood_cleansed, count),
y=count),
stat="identity", fill = "light blue")  +
coord_flip() +
labs(title="Top  10 neighbourhoods with maximum listings",
x="Neighbourhoods", y="Number of listings") +
theme_minimal()
listings_sub %>%
count(cut_width(price, 10)) %>%
arrange(desc(n)) %>%
top_n(1)
listings_sub %>%
filter(price == max(listings_sub$price)) %>%
select(neighbourhood_cleansed ,property_type,price)
listings_sub %>%
filter(price >= quantile(listings_sub$price)[2] & price <= quantile(listings_sub$price)[3]) %>%
distinct(neighbourhood_cleansed)
listings_sub$price_cat <- cut(listings_sub$price, c(0, 151, 354, 410),
labels = c("affordable", "moderate", "expensive"))
datatable( listings_sub %>%
group_by(price_cat) %>%
summarise(count=n()))
affordable.rentals <- listings_sub %>%
filter(price_cat == "affordable")
affordable.rentals$accommodation_cat <- cut(affordable.rentals$accommodates, c(0,1,4,20),
labels = c("single", "family", "group"))
plot1 <- affordable.rentals %>%
group_by(accommodation_cat) %>%
summarise(mean=mean(price)) %>%
ggplot() +
geom_bar(mapping = aes(x=reorder(accommodation_cat, mean),
y=mean),
stat="identity", fill = "light blue")  +
labs(title="Average price by acccomodation",
x="Accommodation type ", y="Average price of the listings") +
theme_minimal()
plot2 <- affordable.rentals %>%
group_by(room_type) %>%
summarise(mean=mean(price)) %>%
arrange(desc(mean)) %>%
# top_n(5) %>%
ggplot() +
geom_bar(mapping = aes(x=reorder(room_type, mean),
y=mean),
stat="identity", fill = "light blue")  +
labs(title="Average price by room type",
x="Room type ", y="Average price of the listings") +
theme_minimal()
grid.arrange(plot1, plot2, ncol=2)
affordable.rentals %>%
group_by(property_type) %>%
summarise(mean=mean(price)) %>%
arrange(desc(mean)) %>%
# top_n(5) %>%
ggplot() +
geom_bar(mapping = aes(x=reorder(property_type, mean),
y=mean),
stat="identity", fill = "light blue")  +
coord_flip() +
labs(title="Average Price property wise",
x="Property type ", y="Average price of the listings") +
theme_minimal()
affordable.rentals %>%
group_by(bed_type) %>%
summarise(mean=mean(price)) %>%
arrange(desc(mean)) %>%
# top_n(5) %>%
ggplot() +
geom_bar(mapping = aes(x=reorder(bed_type, mean),
y=mean),
stat="identity", fill = "light blue")  +
# coord_flip() +
labs(title="Average Price by bed type",
x="Bed type ", y="Average price of the listings") +
theme_minimal()
family.affordable <- affordable.rentals %>%
filter(accommodation_cat =="family")
map <- get_map(location = 'Rome',maptype = "roadmap", zoom = "auto", scale = "auto")
locations <- ggmap(map) + geom_point(aes(x = longitude, y = latitude, color = room_type), data = family.affordable, alpha = 0.8)
locations
datatable(family.affordable %>%
group_by(room_type) %>%
select(room_type) %>%
summarise(count = n()))
(family.affordable %>%
group_by(room_type) %>%
summarise(AveragePrice=round(mean(price), 2)) %>%
arrange(AveragePrice))
locations <- ggmap(map) + geom_point(aes(x = longitude, y = latitude, color = bed_type), data = family.affordable, alpha = 0.8)
locations
datatable(family.affordable %>%
group_by(bed_type) %>%
select(bed_type) %>%
summarise(count = n()))
datatable(family.affordable %>%
group_by(neighbourhood_cleansed) %>%
select(neighbourhood_cleansed) %>%
summarise(count = n())%>%
arrange(desc(count)) %>%
top_n(5))
datatable(family.affordable %>%
group_by(neighbourhood_cleansed) %>%
summarise(AveragePrice=round(mean(price), 2)) %>%
arrange(AveragePrice))
single.affordable <- affordable.rentals %>%
filter(accommodation_cat == "single")
locations <- ggmap(map) + geom_point(aes(x = longitude, y = latitude, color = room_type), data = single.affordable, alpha = 0.8)
locations
datatable(single.affordable %>%
group_by(room_type) %>%
select(room_type) %>%
summarise(count = n()))
datatable(single.affordable %>%
group_by(room_type) %>%
summarise(AveragePrice=round(mean(price), 2)) %>%
arrange(AveragePrice))
locations <- ggmap(map) + geom_point(aes(x = longitude, y = latitude, color = bed_type), data = single.affordable, alpha = 0.8)
locations
datatable(single.affordable %>%
group_by(bed_type) %>%
select(bed_type) %>%
summarise(count = n()))
datatable(single.affordable %>%
group_by(neighbourhood_cleansed) %>%
select(neighbourhood_cleansed) %>%
summarise(count = n())%>%
arrange(desc(count)) %>%
top_n(5))
datatable(single.affordable %>%
group_by(neighbourhood_cleansed) %>%
summarise(AveragePrice=round(mean(price), 2)) %>%
arrange(AveragePrice))
